################################################################################
# Copyright © 2013-2016 The Nxt Core Developers.                               #
# Copyright © 2016 Jelurida IP B.V.                                            #
#                                                                              #
# See the LICENSE.txt file at the top-level directory of this distribution     #
# for licensing information.                                                   #
#                                                                              #
# Unless otherwise agreed in a custom licensing agreement with Jelurida B.V.,  #
# no part of the Nxt software, including this file, may be copied, modified,   #
# propagated, or distributed except according to the terms contained in the    #
# LICENSE.txt file.                                                            #
#                                                                              #
# Removal or modification of this copyright notice is prohibited.              #
#                                                                              #
################################################################################

# Do not modify this file. Instead, create a apo.properties file with only the
# properties you need to change, and set them there. The values in
# apo.properties override those in apo-default.properties.



#### SYSTEM ####

# Set the socks proxy host.
#socksProxyHost=localhost

# Set the socks proxy port.
#socksProxyPort=9050



#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other
# peers. If disabled, peer networking servlet will not be started at all.
apo.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
apo.peerServerPort=2052

# Enable UPnP for the peer port.
apo.enablePeerUPnP=true

# UPnP gateway http read timeout, milliseconds. Set to -1 to disable.
# Default 7000 if not set.
#apo.upnpGatewayTimeout=7000

# UPnP gateway socket connection timeout, milliseconds. Set to -1 to disable.
# Default 3000 if not set.
#apo.upnpDiscoverTimeout=3000

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all interfaces, including IPv6.
apo.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to
# peers, and may be different from apo.peerServerPort (useful if you do port
# forwarding behind a router).
apo.myAddress=

# My platform, to be announced to peers.
apo.myPlatform=

# My hallmark, if available.
apo.myHallmark=

# Default initial peers. Only used if apo.usePeersDb=true.
# Do not modify. Add custom peers to apo.wellKnownPeers instead.
apo.defaultPeers=

# A list of well known peer addresses / host names, separated by '; '. These
# peers are always kept in connected state.
apo.wellKnownPeers=

# Known bad peers to be blacklisted.
apo.knownBlacklistedPeers=

# Default initial peers used for testnet only. Only used if apo.usePeersDb=true.
# Do not modify. Add custom testnet peers to apo.testnetPeers instead.
apo.defaultTestnetPeers=

# Well known testnet peers.
apo.testnetPeers=127.0.0.1

# Maximum number of inbound connections.
apo.maxNumberOfInboundConnections=250

# Maximum number of outbound connections.
apo.maxNumberOfOutboundConnections=50

# Maintain active connections with at least that many peers.
apo.maxNumberOfConnectedPublicPeers=20

# Stop adding new peers when number of known peers exceeds that many.
apo.maxNumberOfKnownPeers=2000

# Stop removing old peers when number of known peers drops below that many.
apo.minNumberOfKnownPeers=1000

# Peer networking connect timeout for outgoing connections.
apo.connectTimeout=10000

# Peer networking read timeout for outgoing connections.
apo.readTimeout=20000

# Peer networking server idle timeout, milliseconds.
apo.peerServerIdleTimeout=30000

# Use WebSocket connection if supported by the remote peer.
apo.useWebSockets=true

# WebSocket connection idle timeout (milliseconds).
apo.webSocketIdleTimeout=900000

# Use the peer hallmark to only connect with peers above the defined push/pull
# hallmark thresholds.
# Disabling hallmark protection also disables weighting of peers by hallmark
# weight, so connecting to any of your peers becomes equally likely.
apo.enableHallmarkProtection=false

# Hallmark threshold to use when sending data to peers.
apo.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
apo.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
apo.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
apo.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
apo.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
apo.enablePeerServerGZIPFilter=false

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing
# only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will
# be used.
apo.isTestnet=false

# Save known peers in the database
apo.savePeers=false

# Set to false to disable use of the peers database and the default initial
# peers. This will not delete saved peers.
apo.usePeersDb=false

# Set to false to disable getting more peers from the currently connected peers.
# Only useful when debugging and want to limit the peers to those in peersDb or
# wellKnownPeers.
apo.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for
# incoming peer connections. This is equivalent to setting
# apo.shareMyAddress=false, apo.wellKnownPeers=, apo.testnetPeers=
# and apo.usePeersDb=false, and if set to true overrides those properties.
apo.isOffline=false

# Ignore peer announced addresses. Do not change unless you understand what it
# does.
apo.ignorePeerAnnouncedAddress=false

# Only allow peer addresses starting with "fc". This is for users of cjdns only,
# do not set if you don't know what that is.
apo.cjdnsOnly=false

# Do not include exception details when returning error response to peers.
apo.hideErrorDetails=false



#### API SERVER ####

# Accept http/json API requests.
apo.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled. Set to * to
# allow all. Can also specify networks in CIDR notation, e.g. 192.168.1.0/24.
apo.allowedBotHosts=*;

# Port for http/json API requests.
apo.apiServerPort=2082

# Port for https/json API request. If same as apo.apiServerPort, the apo.apiSSL
# setting determines whether SSL is used or not.
apo.apiServerSSLPort=2082

# Enable UPnP for the API ports.
apo.enableAPIUPnP=false

# Host interface on which to listen for http/json API request, default localhost
# only. Set to 0.0.0.0 to allow the API server to accept requests from all
# network interfaces, including IPv6.
apo.apiServerHost=0.0.0.0

# Idle timeout for http/json API request connections, milliseconds.
apo.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin
# tools utilizing the http/json API.
apo.apiResourceBase=./html/www

# Default page for the API server.
apo.apiWelcomeFile=index.html

# Java API documentation directory, optional.
apo.javadocResourceBase=./html/doc

# Enable Cross Origin Filter for the API server.
apo.apiServerCORS=true

# Add X-Frame-Options SAMEORIGIN header to every response as a protection
# against clickjacking.
apo.apiFrameOptionsSameOrigin=true

# Enable SSL for the API server (also need to set apo.keyStorePath and
# apo.keyStorePassword).
# Non-SSL connections will be disabled if apo.apiServerSSLPort is equal to
# apo.apiServerPort.
# Otherwise, both SSL and non-SSL connections will be accepted.
apo.apiSSL=false

# Enabled cipher suites for the API server when SSL is enabled. The list below
# is an example to use for choosing AES-GCM instead of AES-CBC, not the default.
#apo.apiSSLCiphers=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384; \
#  TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256; \
#  TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384; \
#  TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256;

# Enforce requests that require POST to only be accepted when submitted as POST.
apo.apiServerEnforcePOST=true

# Compress Http responses for the API server.
apo.enableAPIServerGZIPFilter=false

# Password that should be provided when executing protected (administrative) API
# requests.
# Please choose a decent password here. Preferably, use a password generator.
# Password protection is disabled and password is not needed when the API server
# only listens on the localhost interface, i.e. when
# apo.apiServerHost=127.0.0.1.
apo.adminPassword=

# Set to true to disable the password protection for admin API requests even
# when API server is publicly accessible. Not recommended.
apo.disableAdminPassword=false

# The maximum number of records possible to retrieve with a single request. This
# restriction is not enforced if the admin password is provided, or is not
# needed (disabled or listening on localhost only).
apo.maxAPIRecords=100

# API event registration timeout (seconds). The timeout is reset each time an
# event wait request is received from the application. The minimum value is 15
# seconds.
apo.apiEventTimeout=300

# Maximum number of applications with active event registrations.
apo.apiMaxEventUsers=32

# Maximum file size accepted for upload, in bytes. Default and minimum value
# accepted is 43008 (42 kbytes).
#apo.maxUploadFileSize=0

# If an unsigned transaction is submitted with insufficient fee, set the fee to
# the minimum fee calculated for this transaction instead, as if feeNQT=0 has
# been specified. Default is false.
apo.correctInvalidFees=false

# APIs to disable, as a semicolon separated list.
apo.disabledAPIs=

# Groups of APIs to disable, as a semicolon separated list of API tag names.
apo.disabledAPITags=

# Enables the API proxy. Requests are forwarded to a randomly chosen peer
# providing openAPI service. Outgoing transactions are signed locally - the
# secret phrase is never sent to the remote peer.
# Used by light clients or when the blockchain is not yet downloaded.
# For openAPI nodes, the API proxy remains disabled, ignoring this setting.
# For light clients, the API proxy is always enabled, ignoring this setting.
apo.enableAPIProxy=true

# Operate as light client. Blockchain is not downloaded and processed, instead
# the API proxy is used (see apo.enableAPIProxy).
# Light clients are not advertised as providing openAPI service even if they do
# have their API publicly accessible.
apo.isLightClient=false

# If set, all requests will be forwarded to the specified openAPI peer
apo.forceAPIProxyServerURL=

# The period remote API servers are blacklisted when not functioning (in
# milliseconds).
# The API proxy blacklisting mechanism is in addition to the peers blacklisting
# - if a peer is blacklisted, it won't be used by the proxy, but it is possible
# that a peer is online and correctly functioning, and only its open API is
# blocked (e.g. by firewall)
apo.apiProxyBlacklistingPeriod=1800000



#### OLD NRS USER INTERFACE ####

# Enable the deprecated NRS user interface.
apo.enableUIServer=false

# Hosts from which to allow NRS user interface requests, if enabled. Set to * to
# allow all.
apo.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for NRS user interface server.
apo.uiServerPort=2082

# Host interface for NRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
apo.uiServerHost=127.0.0.1

# Idle timeout for NRS user interface server, milliseconds.
apo.uiServerIdleTimeout=30000

# Directory with html and javascript files for the NRS client user interface.
apo.uiResourceBase=html/nrs

# Enable Cross Origin Filter for NRS user interface server.
apo.uiServerCORS=false

# Enable SSL for the NRS user interface (also need to set apo.keyStorePath and
# apo.keyStorePassword).
apo.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
apo.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#apo.log=apo.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#apo.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
apo.enableLogTraceback=false

# Enable logging of exception stack traces.
apo.enableStackTraces=true

# Enable logging of Jetty messages.
#apo.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
apo.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging
# purposes.
apo.debugTraceAccounts=

# File name for logging tracked account balances.
apo.debugTraceLog=apo-trace.csv

# Separator character for trace log.
apo.debugTraceSeparator=\t

# Quote character for trace log.
apo.debugTraceQuote="

# Log changes to unconfirmed balances.
apo.debugLogUnconfirmed=false

# Log account balance calculations for FXT snapshot for the following account.
#apo.logFxtBalance=APO-RRCQ-N5SL-UX37-G9Y9W



#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible
# customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The apo_db folder is expected to be in the current working directory, will be
# created if missing.
# apo.dbUrl=jdbc:h2:./apo_db/apo;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true.
# apo.testDbUrl=jdbc:h2:./apo_test_db/apo;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

apo.dbType=h2
apo.testDbType=h2

apo.dbDir=./apo_db/apo
apo.testDbDir=./apo_test_db/apo

apo.dbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE;MAX_OPERATION_MEMORY=0
apo.testDbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

apo.dbUsername=sa
apo.testDbUsername=sa

apo.dbPassword=sa
apo.testDbPassword=sa

# Database connection timeout in seconds.
apo.dbLoginTimeout=70

# Database default lock timeout in seconds.
apo.dbDefaultLockTimeout=60

# Database max memory rows limit.
apo.dbMaxMemoryRows=1000000

# Maximum simultaneous database connections.
apo.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, the cache size varies from a minimum of 16MB for heap sizes 160MB
# or less, to a maximum of 256MB for heap sizes 640MB or higher.
apo.dbCacheKB=0

# Enable trimming of derived objects tables. Disabling this will significantly
# worsen performance.
apo.trimDerivedTables=true

# If trimming is enabled, maintain enough previous height records to allow
# rollback of at least that many blocks. Cannot be set to less than 720.
# After increasing this value, a full re-scan also needs to be done in order for
# the previously trimmed records to be re-created and preserved.
apo.maxRollback=800

# When trimming is enabled, it is run every apo.trimFrequency blocks.
apo.trimFrequency=1000

# Override the lifetime of prunable data to keep them longer, value in seconds.
# Set to -1 to disable pruning. Has no effect if set to less then the minimum
# required lifetime of two weeks (1209600 seconds) on mainnet, or 24 hours
# (86400 seconds) on testnet. Default is 90 days.
apo.maxPrunableLifetime=1209600

# Include expired prunable parts if requested as long as it is still available.
# In order to provide the PRUNABLE peer service, apo.maxPrunableLifetime must
# be -1 and apo.includeExpiredPrunable must be true.  The PRUNABLE service means
# the peer will provide expired prunable data to other peers when requested.
apo.includeExpiredPrunable=true

# Threshold for logging database statements (milliseconds).
apo.statementLogThreshold=10000

# Threshold for logging database transactions (milliseconds).
apo.transactionLogThreshold=15000

# Log the average transaction time after this many minutes.
apo.transactionLogInterval=15

# Public keys are by default cached, which consumes 10-15 MB of memory.
apo.enablePublicKeyCache=true



#### Blocks and transactions ####

# Delay generation of next block in order to accumulate more transactions in it.
# Waiting for much more than 15 s is not useful as transactions are allowed at
# most 15 s timestamp difference from the block they can be included in.
apo.forgingDelay=20

# Generate and submit the next block before its hit time in response to
# receiving a lower difficulty block. Submitting the block more than 15 s before
# its time however will lead to its rejection.
apo.forgingSpeedup=3

# Maximum number of forging accounts allowed on this node.
apo.maxNumberOfForgers=100

# Verify batches of blocks downloaded from a single peer with that many other
# peers.
apo.numberOfForkConfirmations=2
apo.testnetNumberOfForkConfirmations=1

# Enable re-broadcasting of new transactions until they are received back from
# at least one peer, or found in the blockchain. This feature can optionally be
# disabled, to avoid the risk of revealing that this node is the submitter of
# such re-broadcasted new transactions.
apo.enableTransactionRebroadcasting=true

# Do not allow the number of unconfirmed transactions in memory to exceed this
# value. If exceeded, the same transaction ordering as when choosing which
# transactions to include in a forged block is used to decide which to keep in
# the unconfirmed pool.
# Set to 0 or negative for no limit.
apo.maxUnconfirmedTransactions=2000

# Maximum number of account monitors allowed on this node
apo.maxNumberOfMonitors=100



#### DESKTOP WALLET ####

# When using desktop mode and when user interface is available. Launch the
# wallet inside a desktop frame when the node is started.
apo.launchDesktopApplication=true

# The default account is used, to automatically login to the wallet during
# startup.
apo.defaultDesktopAccount=


#### ACCOUNT LEDGER ####

# Address of accounts (in RS format) to track balance changes in the ledger
# table, separated by ';'.
# Set to * to track changes for all accounts. Specify no accounts to disable
# the account ledger.
apo.ledgerAccounts=*

# Specify 0 to not log unconfirmed changes, 1 to log unconfirmed changes or 2 to
# log only unconfirmed changes.
apo.ledgerLogUnconfirmed=2

# Specify the number of blocks to keep when trimming the account ledger table.
# A value of zero will cause all blocks to be kept.
apo.ledgerTrimKeep=30000



#### VOTING SYSTEM ####

# If disabled, polls are not processed at finish height and results are not
# stored in the database. When requested, poll results will be calculated
# on-the-fly, if the votes are still available.
apo.processPolls=true



#### MINT ####

# Address of the APO server to which the mint worker submits its transactions
# (default: localhost).
apo.mint.serverAddress=

# Use Https when connecting to the server. Note that mint worker accepts any SSL
# certificate as valid, without checking hostname or certificate authority,
# therefore this will not protect you against a man-in-the-middle attack when
# submitting mint transactions.
apo.mint.useHttps=false

# Specify a mintable currency code.
apo.mint.currencyCode=

# Secret phrase for the minting account, this secret phrase is sent to the host
# specified by apo.mint.serverAddress therefore do not specify secret phrase of
# an account with lots of funds.
apo.mint.secretPhrase=

# Number of units to mint per transaction.
# The minting difficulty grows linearly with the number of units per mint.
apo.mint.unitsPerMint=1

# The initial nonce used for minting.
# Set to 0 to start with a random nonce.
apo.mint.initialNonce=0

# Number of concurrency threads used for minting.
# Set to 0 allocate one thread per processor core.
apo.mint.threadPoolSize=0

# When set to false mint transactions are not submitted when a hash is solved.
# Set this value to true to perform actual minting.
apo.mint.isSubmitted=false

# When set to false the mint worker will resume operation even in case a mint
# transaction has returned an error response.
apo.mint.stopOnError=false



#### Shuffling ####

# Delete finished shufflings and their participants. When enabled, records of
# completed shufflings and their participants are deleted after the shuffling
# has finished, which will improve performance by keeping their tables smaller.
apo.deleteFinishedShufflings=false

# Use strong secure random implementation. As this can block on unix systems,
# it is disabled by default. Enable only if using haveged or other entropy
# source that makes reading from /dev/random fast, otherwise server-side
# encryption will be unusably slow and cause coin shufflings to fail.
apo.useStrongSecureRandom=false

# Maximum number of shufflers allowed to run at the same time on this node.
apo.maxNumberOfShufflers=100



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking
# server only.
apo.peerServerDoSFilter.maxRequestsPerSec=30
apo.peerServerDoSFilter.delayMs=1000
apo.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
apo.keyStorePath=keystore
apo.keyStorePassword=password

# keystore type defaults to JKS can be changed to PKCS12.
apo.keyStoreType=JKS

#### Developers only ####

# Force re-validation of blocks and transaction at start.
apo.forceValidate=false

# Force re-build of derived objects tables at start.
apo.forceScan=false

# Scale epoch time for faster forging. Only works when offline.
# apo.timeMultiplier=1

# Enable the following AddOns, which must also be on the classpath, e.g. placed
# in the addons/classes or addons/lib directory. List of class names, separated
# by semicolon.
#apo.addOns=apo.addons.Demo; apo.addons.AfterStart; apo.addons.BeforeShutdown

# Demo after start and before shutdown scripts
#apo.afterStartScript=../bin/afterStart.sh
#apo.beforeShutdownScript=../bin/beforeShutdown.sh

# NRS normally sets a customized security policy when AddOns are used.
# Set to true to use the default security manager when AddOns are used.
apo.disableSecurityPolicy=false


# NRS version.
apo.version=1.11.2

#### APO ####

# Explicitely enable the TEST UI
apo.enableApiTestUI=true

# If set start forging automatically when node starts
apo.forgerSecretPhrase=

# Fee in DQT
#apo.transactionFee=1000000000

# Fee divided by reductorFee
apo.reductorFee=100
